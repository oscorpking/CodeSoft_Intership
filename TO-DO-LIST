import sys
import datetime
from PyQt5.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QWidget, QLineEdit, QPushButton, QListWidget, QLabel, QListWidgetItem
from PyQt5.QtCore import QTimer

class ToDoListApp(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("To-Do List")
        self.setGeometry(100, 100, 500, 500)

        layout = QVBoxLayout()

        self.task_input = QLineEdit(self)
        layout.addWidget(self.task_input)

        self.add_button = QPushButton("Add Task", self)
        self.add_button.clicked.connect(self.add_task)
        layout.addWidget(self.add_button)

        self.task_list = QListWidget(self)
        layout.addWidget(self.task_list)

        self.remove_button = QPushButton("Remove Task", self)
        self.remove_button.clicked.connect(self.remove_task)
        layout.addWidget(self.remove_button)

        self.status_label = QLabel(self)
        layout.addWidget(self.status_label)

        container = QWidget()
        container.setLayout(layout)
        self.setCentralWidget(container)

        self.current_datetime = QLabel(self)
        self.statusBar().addPermanentWidget(self.current_datetime)

        self.timer = QTimer(self)
        self.timer.timeout.connect(self.update_datetime)
        self.timer.start(1000)  # Update every 1 second

        self.update_datetime()  # Initial update

        self.tasks = []

    def add_task(self):
        task = self.task_input.text()
        if task:
            item = QListWidgetItem(task)
            self.task_list.addItem(item)
            self.task_input.clear()
            self.tasks.append({"task": task, "completed": False})

    def remove_task(self):
        selected_item = self.task_list.currentItem()
        if selected_item:
            row = self.task_list.row(selected_item)
            self.task_list.takeItem(row)
            del self.tasks[row]

    def update_datetime(self):
        now = datetime.datetime.now()
        current_time = now.strftime("%Y-%m-%d %H:%M:%S")
        self.current_datetime.setText(current_time)

        if now.hour == 19 and now.minute == 0 and now.second == 0:
            self.show_summary()

    def show_summary(self):
        completed_tasks = [task["task"] for task in self.tasks if task["completed"]]
        missed_tasks = [task["task"] for task in self.tasks if not task["completed"]]

        summary_text = "Summary at 7:00 PM:\n"
        if completed_tasks:
            summary_text += "Completed tasks:\n"
            for task in completed_tasks:
                summary_text += f"- {task}\n"
        else:
            summary_text += "No tasks completed.\n"

        if missed_tasks:
            summary_text += "Missed tasks:\n"
            for task in missed_tasks:
                summary_text += f"- {task}\n"
        else:
            summary_text += "No tasks missed.\n"

        self.status_label.setText(summary_text)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = ToDoListApp()
    window.show()
    sys.exit(app.exec_())
